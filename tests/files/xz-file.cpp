// Chemfiles, a modern library for chemistry file reading and writing
// Copyright (C) Guillaume Fraux and contributors -- BSD license

#include "catch.hpp"
#include "helpers.hpp"
#include "chemfiles/files/XzFile.hpp"
#include <fstream>
using namespace chemfiles;

TEST_CASE("Read a text file") {
    XzFile file("data/xyz/water.xyz.xz", File::READ);

    std::string line = file.readline();
    CHECK(line == "297");

    auto lines = file.readlines(42);
    REQUIRE(lines.size() == 42);
    CHECK(lines[0] == " generated by VMD");
    CHECK(lines[1] == "  O          0.417219        8.303366       11.737172");

    file.rewind();
    line = file.readline();
    CHECK(line == "297");
    line = file.readline();
    CHECK(line == " generated by VMD");
}


TEST_CASE("Write an xz file") {
    auto filename = NamedTempPath(".xz");

    {
        XzFile file(filename, File::WRITE);
        file << "Test" << std::endl;
        file << 5467 << std::endl;
    }

    std::ifstream verification(filename, std::ios::binary);
    REQUIRE(verification.is_open());
    verification.seekg(0, std::ios::end);
    auto size = static_cast<size_t>(verification.tellg());
    verification.seekg(0, std::ios::beg);

    auto content = std::vector<uint8_t>(size);
    verification.read(reinterpret_cast<char*>(content.data()), static_cast<std::streamsize>(size));

    auto expected = std::vector<uint8_t> {
        0xfd, 0x37, 0x7a, 0x58, 0x5a, 0x00, 0x00, 0x04, 0xe6, 0xd6, 0xb4, 0x46,
        0x02, 0x00, 0x21, 0x01, 0x16, 0x00, 0x00, 0x00, 0x74, 0x2f, 0xe5, 0xa3,
        0x01, 0x00, 0x09, 0x54, 0x65, 0x73, 0x74, 0x0a, 0x35, 0x34, 0x36, 0x37,
        0x0a, 0x00, 0x00, 0x00, 0xbd, 0xb5, 0x7a, 0x14, 0x41, 0x54, 0x79, 0xbe,
        0x00, 0x01, 0x22, 0x0a, 0x15, 0x1a, 0xe1, 0x67, 0x1f, 0xb6, 0xf3, 0x7d,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x59, 0x5a
    };
    CHECK(content == expected);
}
